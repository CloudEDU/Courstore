//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace CloudEDU
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::CloudEDU.CloudEDU_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.String fullName)
        {
            if(_provider == null)
            {
                _provider = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace CloudEDU.CloudEDU_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            string standardName;
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            if(_xamlTypeToStandardName.TryGetValue(type, out standardName))
            {
                xamlType = GetXamlTypeByName(standardName);
            }
            else
            {
                xamlType = GetXamlTypeByName(type.FullName);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (global::System.String.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypes.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            xamlType = CreateXamlType(typeName);
            if (xamlType != null)
            {
                _xamlTypes.Add(typeName, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (global::System.String.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType> _xamlTypes = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();
        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember> _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();
        global::System.Collections.Generic.Dictionary<global::System.Type, string> _xamlTypeToStandardName = new global::System.Collections.Generic.Dictionary<global::System.Type, string>();

        private void AddToMapOfTypeToStandardName(global::System.Type t, global::System.String str)
        {
            if(!_xamlTypeToStandardName.ContainsKey(t))
            {
                _xamlTypeToStandardName.Add(t, str);
            }
        }

        private object Activate_0_VariableSizedStyleSelector() { return new global::CloudEDU.VariableSizedStyleSelector(); }

        private object Activate_1_StarTextConverter() { return new global::CloudEDU.Common.StarTextConverter(); }

        private object Activate_2_StarWidthConverter() { return new global::CloudEDU.Common.StarWidthConverter(); }

        private object Activate_3_StarMarginConverter() { return new global::CloudEDU.Common.StarMarginConverter(); }

        private object Activate_4_AppbarContent() { return new global::CloudEDU.Common.AppbarContent(); }

        private object Activate_5_UserProfileButton() { return new global::CloudEDU.Common.UserProfileButton(); }

        private object Activate_6_User() { return new global::CloudEDU.Login.User(); }

        private object Activate_7_GlobalPage() { return new global::CloudEDU.Common.GlobalPage(); }

        private object Activate_8_Category() { return new global::CloudEDU.CourseStore.Category(); }

        private object Activate_9_CategoryForNewest() { return new global::CloudEDU.CourseStore.CategoryForNewest(); }

        private object Activate_10_WatermarkTextBehavior() { return new global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior(); }

        private object Activate_15_Comment() { return new global::CloudEDU.CourseStore.CourseDetail.Comment(); }

        private object Activate_16_Detail() { return new global::CloudEDU.CourseStore.CourseDetail.Detail(); }

        private object Activate_17_Overview() { return new global::CloudEDU.CourseStore.CourseDetail.Overview(); }

        private object Activate_18_Coursing() { return new global::CloudEDU.CourseStore.Coursing(); }

        private object Activate_19_Home() { return new global::CloudEDU.CourseStore.CoursingDetail.Home(); }

        private object Activate_20_Lecture() { return new global::CloudEDU.CourseStore.CoursingDetail.Lecture(); }

        private object Activate_21_Note() { return new global::CloudEDU.CourseStore.CoursingDetail.Note(); }

        private object Activate_22_Courstore() { return new global::CloudEDU.CourseStore.Courstore(); }

        private object Activate_23_MyCourses() { return new global::CloudEDU.CourseStore.MyCourses(); }

        private object Activate_24_CourseOverview() { return new global::CloudEDU.CourseStore.CourseOverview(); }

        private object Activate_25_SearchResult() { return new global::CloudEDU.CourseStore.SearchResult(); }

        private object Activate_26_Login() { return new global::CloudEDU.Login.Login(); }

        private object Activate_27_LoginDefault() { return new global::CloudEDU.Login.LoginDefault(); }

        private object Activate_28_LoginSel() { return new global::CloudEDU.Login.LoginSel(); }

        private object Activate_29_Profile() { return new global::CloudEDU.Login.Profile(); }

        private object Activate_31_SignUp() { return new global::CloudEDU.Login.SignUp(); }

        private object Activate_32_UserSelButtonControl() { return new global::CloudEDU.Login.UserSelButtonControl(); }

        private object Activate_33_StandardStylePreview() { return new global::CloudEDU.StandardStylePreview(); }

        private object Activate_34_Uploading() { return new global::CloudEDU.Uploading(); }


        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(string typeName)
        {
            global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType userType;

            switch (typeName)
            {
            case "Windows.UI.Xaml.Controls.StyleSelector":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.StyleSelector));
                break;

            case "Windows.UI.Xaml.Style":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Style));
                break;

            case "Object":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Object));
                break;

            case "Windows.UI.Xaml.Controls.UserControl":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.UserControl));
                break;

            case "Windows.UI.Xaml.Controls.Button":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Button));
                break;

            case "Windows.UI.Xaml.Controls.ContentControl":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.ContentControl));
                break;

            case "String":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.String));
                break;

            case "Windows.UI.Xaml.Controls.Page":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Page));
                break;

            case "Windows.UI.Xaml.FrameworkElement":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.FrameworkElement));
                break;

            case "Windows.UI.Xaml.Media.Brush":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Media.Brush));
                break;

            case "Windows.UI.Xaml.Controls.TextBox":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.TextBox));
                break;

            case "Windows.UI.Xaml.Controls.PasswordBox":
                xamlType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.PasswordBox));
                break;

            case "CloudEDU.VariableSizedStyleSelector":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.VariableSizedStyleSelector), GetXamlTypeByName("Windows.UI.Xaml.Controls.StyleSelector"));
                userType.Activator = Activate_0_VariableSizedStyleSelector;
                userType.AddMemberName("NormalStyle");
                userType.AddMemberName("DoubleHeightStyle");
                userType.AddMemberName("DoubleWidthStyle");
                userType.AddMemberName("SquareStyle");
                xamlType = userType;
                break;

            case "CloudEDU.Common.StarTextConverter":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Common.StarTextConverter), GetXamlTypeByName("Object"));
                userType.Activator = Activate_1_StarTextConverter;
                xamlType = userType;
                break;

            case "CloudEDU.Common.StarWidthConverter":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Common.StarWidthConverter), GetXamlTypeByName("Object"));
                userType.Activator = Activate_2_StarWidthConverter;
                xamlType = userType;
                break;

            case "CloudEDU.Common.StarMarginConverter":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Common.StarMarginConverter), GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_StarMarginConverter;
                xamlType = userType;
                break;

            case "CloudEDU.Common.AppbarContent":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Common.AppbarContent), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_AppbarContent;
                xamlType = userType;
                break;

            case "CloudEDU.Common.UserProfileButton":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Common.UserProfileButton), GetXamlTypeByName("Windows.UI.Xaml.Controls.Button"));
                userType.Activator = Activate_5_UserProfileButton;
                userType.AddMemberName("user");
                userType.AddMemberName("UserName");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "CloudEDU.Login.User":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.User), GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_User;
                xamlType = userType;
                break;

            case "CloudEDU.Common.GlobalPage":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Common.GlobalPage), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_7_GlobalPage;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.Category":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.Category), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_8_Category;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CategoryForNewest":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CategoryForNewest), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_9_CategoryForNewest;
                xamlType = userType;
                break;

            case "JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior), GetXamlTypeByName("System.Windows.Interactivity.Behavior<Windows.UI.Xaml.Controls.TextBox>"));
                userType.Activator = Activate_10_WatermarkTextBehavior;
                userType.AddMemberName("WatermarkText");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("WatermarkColor");
                userType.AddMemberName("Text");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "System.Windows.Interactivity.Behavior<Windows.UI.Xaml.Controls.TextBox>":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Windows.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.TextBox>), GetXamlTypeByName("System.Windows.Interactivity.Behavior"));
                AddToMapOfTypeToStandardName(typeof(global::System.Windows.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.TextBox>),
                                                   "System.Windows.Interactivity.Behavior<Windows.UI.Xaml.Controls.TextBox>");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case "System.Windows.Interactivity.Behavior":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Windows.Interactivity.Behavior), GetXamlTypeByName("System.Windows.Interactivity.AttachedObject"));
                xamlType = userType;
                break;

            case "System.Windows.Interactivity.AttachedObject":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Windows.Interactivity.AttachedObject), GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.AddMemberName("AssociatedObjectType");
                xamlType = userType;
                break;

            case "System.Type":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Type), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CourseDetail.Comment":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CourseDetail.Comment), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_15_Comment;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CourseDetail.Detail":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CourseDetail.Detail), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_Detail;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CourseDetail.Overview":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CourseDetail.Overview), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_17_Overview;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.Coursing":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.Coursing), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_18_Coursing;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CoursingDetail.Home":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CoursingDetail.Home), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_19_Home;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CoursingDetail.Lecture":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CoursingDetail.Lecture), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_Lecture;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CoursingDetail.Note":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CoursingDetail.Note), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_Note;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.Courstore":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.Courstore), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_22_Courstore;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.MyCourses":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.MyCourses), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_23_MyCourses;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.CourseOverview":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.CourseOverview), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_24_CourseOverview;
                xamlType = userType;
                break;

            case "CloudEDU.CourseStore.SearchResult":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.CourseStore.SearchResult), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_25_SearchResult;
                xamlType = userType;
                break;

            case "CloudEDU.Login.Login":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.Login), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_Login;
                xamlType = userType;
                break;

            case "CloudEDU.Login.LoginDefault":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.LoginDefault), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_LoginDefault;
                xamlType = userType;
                break;

            case "CloudEDU.Login.LoginSel":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.LoginSel), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_LoginSel;
                xamlType = userType;
                break;

            case "CloudEDU.Login.Profile":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.Profile), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_Profile;
                xamlType = userType;
                break;

            case "CloudEDU.Login.PasswordBoxBehavior":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.PasswordBoxBehavior), GetXamlTypeByName("Object"));
                userType.AddMemberName("Watermark");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "CloudEDU.Login.SignUp":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.SignUp), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_SignUp;
                xamlType = userType;
                break;

            case "CloudEDU.Login.UserSelButtonControl":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Login.UserSelButtonControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.Button"));
                userType.Activator = Activate_32_UserSelButtonControl;
                userType.AddMemberName("user");
                userType.AddMemberName("UserName");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "CloudEDU.StandardStylePreview":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.StandardStylePreview), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_StandardStylePreview;
                xamlType = userType;
                break;

            case "CloudEDU.Uploading":
                userType = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::CloudEDU.Uploading), GetXamlTypeByName("CloudEDU.Common.GlobalPage"));
                userType.Activator = Activate_34_Uploading;
                xamlType = userType;
                break;

            }
            return xamlType;
        }


        private object get_0_VariableSizedStyleSelector_NormalStyle(object instance)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            return that.NormalStyle;
        }
        private void set_0_VariableSizedStyleSelector_NormalStyle(object instance, object Value)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            that.NormalStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_1_VariableSizedStyleSelector_DoubleHeightStyle(object instance)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            return that.DoubleHeightStyle;
        }
        private void set_1_VariableSizedStyleSelector_DoubleHeightStyle(object instance, object Value)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            that.DoubleHeightStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_2_VariableSizedStyleSelector_DoubleWidthStyle(object instance)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            return that.DoubleWidthStyle;
        }
        private void set_2_VariableSizedStyleSelector_DoubleWidthStyle(object instance, object Value)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            that.DoubleWidthStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_3_VariableSizedStyleSelector_SquareStyle(object instance)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            return that.SquareStyle;
        }
        private void set_3_VariableSizedStyleSelector_SquareStyle(object instance, object Value)
        {
            var that = (global::CloudEDU.VariableSizedStyleSelector)instance;
            that.SquareStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_4_UserProfileButton_user(object instance)
        {
            var that = (global::CloudEDU.Common.UserProfileButton)instance;
            return that.user;
        }
        private void set_4_UserProfileButton_user(object instance, object Value)
        {
            var that = (global::CloudEDU.Common.UserProfileButton)instance;
            that.user = (global::CloudEDU.Login.User)Value;
        }
        private object get_5_UserProfileButton_UserName(object instance)
        {
            var that = (global::CloudEDU.Common.UserProfileButton)instance;
            return that.UserName;
        }
        private void set_5_UserProfileButton_UserName(object instance, object Value)
        {
            var that = (global::CloudEDU.Common.UserProfileButton)instance;
            that.UserName = (global::System.String)Value;
        }
        private object get_6_WatermarkTextBehavior_WatermarkText(object instance)
        {
            var that = (global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior)instance;
            return that.WatermarkText;
        }
        private void set_6_WatermarkTextBehavior_WatermarkText(object instance, object Value)
        {
            var that = (global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior)instance;
            that.WatermarkText = (global::System.String)Value;
        }
        private object get_7_WatermarkTextBehavior_WatermarkColor(object instance)
        {
            var that = (global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior)instance;
            return that.WatermarkColor;
        }
        private void set_7_WatermarkTextBehavior_WatermarkColor(object instance, object Value)
        {
            var that = (global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior)instance;
            that.WatermarkColor = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_8_Behavior_AssociatedObject(object instance)
        {
            var that = (global::System.Windows.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.TextBox>)instance;
            return that.AssociatedObject;
        }
        private void set_8_Behavior_AssociatedObject(object instance, object Value)
        {
            var that = (global::System.Windows.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.TextBox>)instance;
            that.AssociatedObject = (global::Windows.UI.Xaml.Controls.TextBox)Value;
        }
        private object get_9_AttachedObject_AssociatedObjectType(object instance)
        {
            var that = (global::System.Windows.Interactivity.AttachedObject)instance;
            return that.AssociatedObjectType;
        }
        private object get_10_WatermarkTextBehavior_Text(object instance)
        {
            return global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior.GetText((global::Windows.UI.Xaml.Controls.TextBox)instance);
        }
        private void set_10_WatermarkTextBehavior_Text(object instance, object Value)
        {
            global::JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior.SetText((global::Windows.UI.Xaml.Controls.TextBox)instance, (System.String)Value);
                    }
        private object get_11_PasswordBoxBehavior_Watermark(object instance)
        {
            return global::CloudEDU.Login.PasswordBoxBehavior.GetWatermark((global::Windows.UI.Xaml.Controls.PasswordBox)instance);
        }
        private void set_11_PasswordBoxBehavior_Watermark(object instance, object Value)
        {
            global::CloudEDU.Login.PasswordBoxBehavior.SetWatermark((global::Windows.UI.Xaml.Controls.PasswordBox)instance, (System.String)Value);
                    }
        private object get_12_UserSelButtonControl_user(object instance)
        {
            var that = (global::CloudEDU.Login.UserSelButtonControl)instance;
            return that.user;
        }
        private void set_12_UserSelButtonControl_user(object instance, object Value)
        {
            var that = (global::CloudEDU.Login.UserSelButtonControl)instance;
            that.user = (global::CloudEDU.Login.User)Value;
        }
        private object get_13_UserSelButtonControl_UserName(object instance)
        {
            var that = (global::CloudEDU.Login.UserSelButtonControl)instance;
            return that.UserName;
        }
        private void set_13_UserSelButtonControl_UserName(object instance, object Value)
        {
            var that = (global::CloudEDU.Login.UserSelButtonControl)instance;
            that.UserName = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember xamlMember = null;
            global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "CloudEDU.VariableSizedStyleSelector.NormalStyle":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.VariableSizedStyleSelector");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "NormalStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_0_VariableSizedStyleSelector_NormalStyle;
                xamlMember.Setter = set_0_VariableSizedStyleSelector_NormalStyle;
                break;
            case "CloudEDU.VariableSizedStyleSelector.DoubleHeightStyle":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.VariableSizedStyleSelector");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "DoubleHeightStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_1_VariableSizedStyleSelector_DoubleHeightStyle;
                xamlMember.Setter = set_1_VariableSizedStyleSelector_DoubleHeightStyle;
                break;
            case "CloudEDU.VariableSizedStyleSelector.DoubleWidthStyle":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.VariableSizedStyleSelector");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "DoubleWidthStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_2_VariableSizedStyleSelector_DoubleWidthStyle;
                xamlMember.Setter = set_2_VariableSizedStyleSelector_DoubleWidthStyle;
                break;
            case "CloudEDU.VariableSizedStyleSelector.SquareStyle":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.VariableSizedStyleSelector");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "SquareStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_3_VariableSizedStyleSelector_SquareStyle;
                xamlMember.Setter = set_3_VariableSizedStyleSelector_SquareStyle;
                break;
            case "CloudEDU.Common.UserProfileButton.user":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.Common.UserProfileButton");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "user", "CloudEDU.Login.User");
                xamlMember.Getter = get_4_UserProfileButton_user;
                xamlMember.Setter = set_4_UserProfileButton_user;
                break;
            case "CloudEDU.Common.UserProfileButton.UserName":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.Common.UserProfileButton");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "UserName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_UserProfileButton_UserName;
                xamlMember.Setter = set_5_UserProfileButton_UserName;
                break;
            case "JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior.WatermarkText":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "WatermarkText", "String");
                xamlMember.Getter = get_6_WatermarkTextBehavior_WatermarkText;
                xamlMember.Setter = set_6_WatermarkTextBehavior_WatermarkText;
                break;
            case "JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior.WatermarkColor":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "WatermarkColor", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_WatermarkTextBehavior_WatermarkColor;
                xamlMember.Setter = set_7_WatermarkTextBehavior_WatermarkColor;
                break;
            case "System.Windows.Interactivity.Behavior<Windows.UI.Xaml.Controls.TextBox>.AssociatedObject":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Windows.Interactivity.Behavior<Windows.UI.Xaml.Controls.TextBox>");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.Controls.TextBox");
                xamlMember.Getter = get_8_Behavior_AssociatedObject;
                xamlMember.Setter = set_8_Behavior_AssociatedObject;
                break;
            case "System.Windows.Interactivity.AttachedObject.AssociatedObjectType":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Windows.Interactivity.AttachedObject");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "AssociatedObjectType", "System.Type");
                xamlMember.Getter = get_9_AttachedObject_AssociatedObjectType;
                xamlMember.SetIsReadOnly();
                break;
            case "JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior.Text":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JulMar.Windows.Interactivity.Interactivity.WatermarkTextBehavior");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.Controls.TextBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_10_WatermarkTextBehavior_Text;
                xamlMember.Setter = set_10_WatermarkTextBehavior_Text;
                break;
            case "CloudEDU.Login.PasswordBoxBehavior.Watermark":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.Login.PasswordBoxBehavior");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "Watermark", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.Controls.PasswordBox");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_11_PasswordBoxBehavior_Watermark;
                xamlMember.Setter = set_11_PasswordBoxBehavior_Watermark;
                break;
            case "CloudEDU.Login.UserSelButtonControl.user":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.Login.UserSelButtonControl");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "user", "CloudEDU.Login.User");
                xamlMember.Getter = get_12_UserSelButtonControl_user;
                xamlMember.Setter = set_12_UserSelButtonControl_user;
                break;
            case "CloudEDU.Login.UserSelButtonControl.UserName":
                userType = (global::CloudEDU.CloudEDU_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CloudEDU.Login.UserSelButtonControl");
                xamlMember = new global::CloudEDU.CloudEDU_XamlTypeInfo.XamlMember(this, "UserName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_UserSelButtonControl_UserName;
                xamlMember.Setter = set_13_UserSelButtonControl_UserName;
                break;
            }
            return xamlMember;
        }

    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(global::System.String input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::CloudEDU.CloudEDU_XamlTypeInfo.XamlSystemBaseType
    {
        global::CloudEDU.CloudEDU_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::CloudEDU.CloudEDU_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public global::System.Object CreateFromString(global::System.String input)
        {
            if (_enumValues != null)
            {
                global::System.Int32 value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    global::System.Int32 enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( global::System.String.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::CloudEDU.CloudEDU_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::CloudEDU.CloudEDU_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(global::System.String targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


